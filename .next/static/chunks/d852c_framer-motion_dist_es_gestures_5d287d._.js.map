{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs"],"sourcesContent":["function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n"],"names":[],"mappings":";;;;;AAAA,SAAS,WAAW,IAAI;IACpB,IAAI,OAAO;IACX,OAAO;QACH,MAAM,WAAW;YACb,OAAO;QACX;QACA,IAAI,SAAS,MAAM;YACf,OAAO;YACP,OAAO;QACX;QACA,OAAO;IACX;AACJ;AACA,MAAM,uBAAuB,WAAW;AACxC,MAAM,qBAAqB,WAAW;AACtC,SAAS,cAAc,IAAI;IACvB,IAAI,OAAO;IACX,IAAI,SAAS,KAAK;QACd,OAAO;IACX,OACK,IAAI,SAAS,KAAK;QACnB,OAAO;IACX,OACK;QACD,MAAM,iBAAiB;QACvB,MAAM,eAAe;QACrB,IAAI,kBAAkB,cAAc;YAChC,OAAO;gBACH;gBACA;YACJ;QACJ,OACK;YACD,8CAA8C;YAC9C,IAAI,gBACA;YACJ,IAAI,cACA;QACR;IACJ;IACA,OAAO;AACX;AACA,SAAS;IACL,4EAA4E;IAC5E,0CAA0C;IAC1C,MAAM,kBAAkB,cAAc;IACtC,IAAI,CAAC,iBACD,OAAO;IACX;IACA,OAAO;AACX"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/hover.mjs"],"sourcesContent":["import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAMA,SAAS,cAAc,IAAI,EAAE,QAAQ;IACjC,MAAM,YAAY,WAAW,iBAAiB;IAC9C,MAAM,eAAe,WAAW,iBAAiB;IACjD,MAAM,cAAc,CAAC,OAAO;QACxB,IAAI,MAAM,WAAW,KAAK,WAAW,CAAA,GAAA,mUAAA,CAAA,eAAY,AAAD,KAC5C;QACJ,MAAM,QAAQ,KAAK,QAAQ;QAC3B,IAAI,KAAK,cAAc,IAAI,MAAM,UAAU,EAAE;YACzC,KAAK,cAAc,CAAC,SAAS,CAAC,cAAc;QAChD;QACA,MAAM,WAAW,KAAK,CAAC,aAAa;QACpC,IAAI,UAAU;YACV,oTAAA,CAAA,QAAK,CAAC,UAAU,CAAC,IAAM,SAAS,OAAO;QAC3C;IACJ;IACA,OAAO,CAAA,GAAA,mUAAA,CAAA,kBAAe,AAAD,EAAE,KAAK,OAAO,EAAE,WAAW,aAAa;QACzD,SAAS,CAAC,KAAK,QAAQ,EAAE,CAAC,aAAa;IAC3C;AACJ;AACA,MAAM,qBAAqB,+TAAA,CAAA,UAAO;IAC9B,QAAQ;QACJ,IAAI,CAAC,OAAO,GAAG,CAAA,GAAA,+SAAA,CAAA,OAAI,AAAD,EAAE,cAAc,IAAI,CAAC,IAAI,EAAE,OAAO,cAAc,IAAI,CAAC,IAAI,EAAE;IACjF;IACA,UAAU,CAAE;AAChB"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/focus.mjs"],"sourcesContent":["import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n"],"names":[],"mappings":";;;;;;;;;;AAIA,MAAM,qBAAqB,+TAAA,CAAA,UAAO;IAC9B,aAAc;QACV,KAAK,IAAI;QACT,IAAI,CAAC,QAAQ,GAAG;IACpB;IACA,UAAU;QACN,IAAI,iBAAiB;QACrB;;;;;SAKC,GACD,IAAI;YACA,iBAAiB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAC/C,EACA,OAAO,GAAG;YACN,iBAAiB;QACrB;QACA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAC5C;QACJ,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,cAAc;QACjD,IAAI,CAAC,QAAQ,GAAG;IACpB;IACA,SAAS;QACL,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAC3C;QACJ,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,cAAc;QACjD,IAAI,CAAC,QAAQ,GAAG;IACpB;IACA,QAAQ;QACJ,IAAI,CAAC,OAAO,GAAG,CAAA,GAAA,+SAAA,CAAA,OAAI,AAAD,EAAE,CAAA,GAAA,+TAAA,CAAA,cAAW,AAAD,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,IAAM,IAAI,CAAC,OAAO,KAAK,CAAA,GAAA,+TAAA,CAAA,cAAW,AAAD,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,IAAM,IAAI,CAAC,MAAM;IAC/I;IACA,UAAU,CAAE;AAChB"}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs"],"sourcesContent":["/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AACD,MAAM,gBAAgB,CAAC,QAAQ;IAC3B,IAAI,CAAC,OAAO;QACR,OAAO;IACX,OACK,IAAI,WAAW,OAAO;QACvB,OAAO;IACX,OACK;QACD,OAAO,cAAc,QAAQ,MAAM,aAAa;IACpD;AACJ"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/press.mjs"],"sourcesContent":["import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAUA,SAAS,0BAA0B,IAAI,EAAE,OAAO;IAC5C,IAAI,CAAC,SACD;IACJ,MAAM,wBAAwB,IAAI,aAAa,YAAY;IAC3D,QAAQ,uBAAuB,CAAA,GAAA,yTAAA,CAAA,mBAAgB,AAAD,EAAE;AACpD;AACA,MAAM,qBAAqB,+TAAA,CAAA,UAAO;IAC9B,aAAc;QACV,KAAK,IAAI;QACT,IAAI,CAAC,oBAAoB,GAAG,+SAAA,CAAA,OAAI;QAChC,IAAI,CAAC,kBAAkB,GAAG,+SAAA,CAAA,OAAI;QAC9B,IAAI,CAAC,yBAAyB,GAAG,+SAAA,CAAA,OAAI;QACrC,IAAI,CAAC,iBAAiB,GAAG,CAAC,YAAY;YAClC,IAAI,IAAI,CAAC,UAAU,EACf;YACJ,IAAI,CAAC,kBAAkB;YACvB,MAAM,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ;YAChC,MAAM,kBAAkB,CAAC,UAAU;gBAC/B,IAAI,CAAC,IAAI,CAAC,aAAa,IACnB;gBACJ,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ;gBAClE;;;iBAGC,GACD,MAAM,UAAU,CAAC,mBACb,CAAC,CAAA,GAAA,gVAAA,CAAA,gBAAa,AAAD,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,MAAM,IAC/C,cACA;gBACN,IAAI,SAAS;oBACT,oTAAA,CAAA,QAAK,CAAC,MAAM,CAAC,IAAM,QAAQ,UAAU;gBACzC;YACJ;YACA,MAAM,0BAA0B,CAAA,GAAA,mUAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ,aAAa,iBAAiB;gBAClF,SAAS,CAAC,CAAC,MAAM,KAAK,IAAI,KAAK,CAAC,cAAc;YAClD;YACA,MAAM,8BAA8B,CAAA,GAAA,mUAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ,iBAAiB,CAAC,aAAa,aAAe,IAAI,CAAC,WAAW,CAAC,aAAa,aAAa;gBACjJ,SAAS,CAAC,CAAC,MAAM,WAAW,IACxB,KAAK,CAAC,kBAAkB;YAChC;YACA,IAAI,CAAC,kBAAkB,GAAG,CAAA,GAAA,+SAAA,CAAA,OAAI,AAAD,EAAE,yBAAyB;YACxD,IAAI,CAAC,UAAU,CAAC,YAAY;QAChC;QACA,IAAI,CAAC,oBAAoB,GAAG;YACxB,MAAM,gBAAgB,CAAC;gBACnB,IAAI,aAAa,GAAG,KAAK,WAAW,IAAI,CAAC,UAAU,EAC/C;gBACJ,MAAM,cAAc,CAAC;oBACjB,IAAI,WAAW,GAAG,KAAK,WAAW,CAAC,IAAI,CAAC,aAAa,IACjD;oBACJ,0BAA0B,MAAM,CAAC,OAAO;wBACpC,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ;wBACpC,IAAI,OAAO;4BACP,oTAAA,CAAA,QAAK,CAAC,UAAU,CAAC,IAAM,MAAM,OAAO;wBACxC;oBACJ;gBACJ;gBACA,IAAI,CAAC,kBAAkB;gBACvB,IAAI,CAAC,kBAAkB,GAAG,CAAA,GAAA,+TAAA,CAAA,cAAW,AAAD,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS;gBAClE,0BAA0B,QAAQ,CAAC,OAAO;oBACtC,IAAI,CAAC,UAAU,CAAC,OAAO;gBAC3B;YACJ;YACA,MAAM,wBAAwB,CAAA,GAAA,+TAAA,CAAA,cAAW,AAAD,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW;YACxE,MAAM,aAAa;gBACf,IAAI,CAAC,IAAI,CAAC,UAAU,EAChB;gBACJ,0BAA0B,UAAU,CAAC,aAAa,aAAe,IAAI,CAAC,WAAW,CAAC,aAAa;YACnG;YACA,MAAM,qBAAqB,CAAA,GAAA,+TAAA,CAAA,cAAW,AAAD,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ;YAClE,IAAI,CAAC,yBAAyB,GAAG,CAAA,GAAA,+SAAA,CAAA,OAAI,AAAD,EAAE,uBAAuB;QACjE;IACJ;IACA,WAAW,KAAK,EAAE,IAAI,EAAE;QACpB,IAAI,CAAC,UAAU,GAAG;QAClB,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ;QACnD;;SAEC,GACD,IAAI,YAAY,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACtC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,YAAY;QACnD;QACA,IAAI,YAAY;YACZ,oTAAA,CAAA,QAAK,CAAC,UAAU,CAAC,IAAM,WAAW,OAAO;QAC7C;IACJ;IACA,gBAAgB;QACZ,IAAI,CAAC,kBAAkB;QACvB,IAAI,CAAC,UAAU,GAAG;QAClB,MAAM,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ;QAChC,IAAI,MAAM,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YAC5C,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,YAAY;QACnD;QACA,OAAO,CAAC,CAAA,GAAA,mUAAA,CAAA,eAAY,AAAD;IACvB;IACA,YAAY,KAAK,EAAE,IAAI,EAAE;QACrB,IAAI,CAAC,IAAI,CAAC,aAAa,IACnB;QACJ,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ;QAC1C,IAAI,aAAa;YACb,oTAAA,CAAA,QAAK,CAAC,UAAU,CAAC,IAAM,YAAY,OAAO;QAC9C;IACJ;IACA,QAAQ;QACJ,MAAM,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ;QAChC,MAAM,wBAAwB,CAAA,GAAA,mUAAA,CAAA,kBAAe,AAAD,EAAE,MAAM,eAAe,GAAG,SAAS,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,eAAe,IAAI,CAAC,iBAAiB,EAAE;YACrI,SAAS,CAAC,CAAC,MAAM,UAAU,IACvB,KAAK,CAAC,iBAAiB;QAC/B;QACA,MAAM,sBAAsB,CAAA,GAAA,+TAAA,CAAA,cAAW,AAAD,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,IAAI,CAAC,oBAAoB;QAC7F,IAAI,CAAC,oBAAoB,GAAG,CAAA,GAAA,+SAAA,CAAA,OAAI,AAAD,EAAE,uBAAuB;IAC5D;IACA,UAAU;QACN,IAAI,CAAC,oBAAoB;QACzB,IAAI,CAAC,kBAAkB;QACvB,IAAI,CAAC,yBAAyB;IAClC;AACJ"}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs"],"sourcesContent":["import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 483, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 488, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs"],"sourcesContent":["import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 619, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 624, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs"],"sourcesContent":["import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1096, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1101, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/drag/index.mjs"],"sourcesContent":["import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n"],"names":[],"mappings":";;;;;;;;;;AAIA,MAAM,oBAAoB,+TAAA,CAAA,UAAO;IAC7B,YAAY,IAAI,CAAE;QACd,KAAK,CAAC;QACN,IAAI,CAAC,mBAAmB,GAAG,+SAAA,CAAA,OAAI;QAC/B,IAAI,CAAC,eAAe,GAAG,+SAAA,CAAA,OAAI;QAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,+UAAA,CAAA,4BAAyB,CAAC;IAClD;IACA,QAAQ;QACJ,kFAAkF;QAClF,2CAA2C;QAC3C,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ;QAC3C,IAAI,cAAc;YACd,IAAI,CAAC,mBAAmB,GAAG,aAAa,SAAS,CAAC,IAAI,CAAC,QAAQ;QACnE;QACA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,MAAM,+SAAA,CAAA,OAAI;IAC/D;IACA,UAAU;QACN,IAAI,CAAC,mBAAmB;QACxB,IAAI,CAAC,eAAe;IACxB;AACJ"}},
    {"offset": {"line": 1133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1138, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/framer-motion@11.3.30_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/framer-motion/dist/es/gestures/pan/index.mjs"],"sourcesContent":["import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAOA,MAAM,eAAe,CAAC,UAAY,CAAC,OAAO;QACtC,IAAI,SAAS;YACT,oTAAA,CAAA,QAAK,CAAC,UAAU,CAAC,IAAM,QAAQ,OAAO;QAC1C;IACJ;AACA,MAAM,mBAAmB,+TAAA,CAAA,UAAO;IAC5B,aAAc;QACV,KAAK,IAAI;QACT,IAAI,CAAC,yBAAyB,GAAG,+SAAA,CAAA,OAAI;IACzC;IACA,cAAc,gBAAgB,EAAE;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,+TAAA,CAAA,aAAU,CAAC,kBAAkB,IAAI,CAAC,iBAAiB,IAAI;YACtE,oBAAoB,IAAI,CAAC,IAAI,CAAC,qBAAqB;YACnD,eAAe,CAAA,GAAA,mUAAA,CAAA,mBAAgB,AAAD,EAAE,IAAI,CAAC,IAAI;QAC7C;IACJ;IACA,oBAAoB;QAChB,MAAM,EAAE,iBAAiB,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ;QAC7E,OAAO;YACH,gBAAgB,aAAa;YAC7B,SAAS,aAAa;YACtB,QAAQ;YACR,OAAO,CAAC,OAAO;gBACX,OAAO,IAAI,CAAC,OAAO;gBACnB,IAAI,UAAU;oBACV,oTAAA,CAAA,QAAK,CAAC,UAAU,CAAC,IAAM,SAAS,OAAO;gBAC3C;YACJ;QACJ;IACJ;IACA,QAAQ;QACJ,IAAI,CAAC,yBAAyB,GAAG,CAAA,GAAA,mUAAA,CAAA,kBAAe,AAAD,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,eAAe,CAAC,QAAU,IAAI,CAAC,aAAa,CAAC;IACrH;IACA,SAAS;QACL,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB;IACtE;IACA,UAAU;QACN,IAAI,CAAC,yBAAyB;QAC9B,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG;IACpC;AACJ"}},
    {"offset": {"line": 1196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}