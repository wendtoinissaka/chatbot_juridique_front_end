{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/stocks/stock.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useRef, useEffect, useId } from 'react'\nimport { subMonths, format } from 'lib/utils'\nimport { useAIState } from 'ai/rsc'\n\ninterface Stock {\n  symbol: string\n  price: number\n  delta: number\n}\n\nfunction scaleLinear(domain: [number, number], range: [number, number]) {\n  const [d0, d1] = domain\n  const [r0, r1] = range\n\n  return function scale(value: number): number {\n    return r0 + ((value - d0) / (d1 - d0)) * (r1 - r0)\n  }\n}\n\nfunction useResizeObserver<T extends HTMLElement = HTMLElement>(\n  ref: React.RefObject<T>\n) {\n  const [size, setSize] = useState({ width: 0, height: 0 })\n\n  useEffect(() => {\n    if (!ref.current) return\n\n    const observer = new ResizeObserver(([entry]) => {\n      if (entry.borderBoxSize && entry.borderBoxSize.length > 0) {\n        setSize({\n          width: entry.borderBoxSize[0].inlineSize,\n          height: entry.borderBoxSize[0].blockSize\n        })\n      } else {\n        // Fallback for browsers that don't support borderBoxSize\n        const { width, height } = entry.target.getBoundingClientRect()\n        setSize({ width, height })\n      }\n    })\n\n    observer.observe(ref.current)\n    return () => observer.disconnect()\n  }, [ref])\n\n  return size\n}\n\nexport function Stock({ props: { symbol, price, delta } }: { props: Stock }) {\n  const [aiState, setAIState] = useAIState()\n  const id = useId()\n\n  const [priceAtTime, setPriceAtTime] = useState({\n    time: '00:00',\n    value: price.toFixed(2),\n    x: 0\n  })\n\n  const [startHighlight, setStartHighlight] = useState(0)\n  const [endHighlight, setEndHighlight] = useState(0)\n\n  const chartRef = useRef<HTMLDivElement>(null)\n  const { width = 0 } = useResizeObserver(chartRef)\n\n  const xToDate = scaleLinear(\n    [0, width],\n    [subMonths(new Date(), 6).getTime(), new Date().getTime()]\n  )\n\n  const xToValue = scaleLinear(\n    [0, width],\n    [price - price / 2, price + price / 2]\n  )\n\n  useEffect(() => {\n    if (startHighlight && endHighlight) {\n      const message = {\n        id,\n        role: 'system' as const,\n        content: `[User has highlighted dates between between ${format(\n          new Date(xToDate(startHighlight)),\n          'd LLL'\n        )} and ${format(new Date(xToDate(endHighlight)), 'd LLL, yyyy')}`\n      }\n\n      if (aiState.messages[aiState.messages.length - 1]?.id === id) {\n        setAIState({\n          ...aiState,\n          messages: [...aiState.messages.slice(0, -1), message]\n        })\n      } else {\n        setAIState({\n          ...aiState,\n          messages: [...aiState.messages, message]\n        })\n      }\n    }\n  }, [startHighlight, endHighlight])\n\n  return (\n    <div className=\"rounded-xl border bg-zinc-950 p-4 text-green-400\">\n      <div className=\"float-right inline-block rounded-full bg-white/10 px-2 py-1 text-xs\">\n        {`${delta > 0 ? '+' : ''}${((delta / price) * 100).toFixed(2)}% ${\n          delta > 0 ? '↑' : '↓'\n        }`}\n      </div>\n      <div className=\"text-lg text-zinc-300\">{symbol}</div>\n      <div className=\"text-3xl font-bold\">${price}</div>\n      <div className=\"text mt-1 text-xs text-zinc-500\">\n        Closed: Feb 27, 4:59 PM EST\n      </div>\n\n      <div\n        className=\"relative -mx-4 cursor-col-resize\"\n        onPointerDown={event => {\n          if (chartRef.current) {\n            const { clientX } = event\n            const { left } = chartRef.current.getBoundingClientRect()\n\n            setStartHighlight(clientX - left)\n            setEndHighlight(0)\n\n            setPriceAtTime({\n              time: format(new Date(xToDate(clientX)), 'dd LLL yy'),\n              value: xToValue(clientX).toFixed(2),\n              x: clientX - left\n            })\n          }\n        }}\n        onPointerUp={event => {\n          if (chartRef.current) {\n            const { clientX } = event\n            const { left } = chartRef.current.getBoundingClientRect()\n\n            setEndHighlight(clientX - left)\n          }\n        }}\n        onPointerMove={event => {\n          if (chartRef.current) {\n            const { clientX } = event\n            const { left } = chartRef.current.getBoundingClientRect()\n\n            setPriceAtTime({\n              time: format(new Date(xToDate(clientX)), 'dd LLL yy'),\n              value: xToValue(clientX).toFixed(2),\n              x: clientX - left\n            })\n          }\n        }}\n        onPointerLeave={() => {\n          setPriceAtTime({\n            time: '00:00',\n            value: price.toFixed(2),\n            x: 0\n          })\n        }}\n        ref={chartRef}\n      >\n        {priceAtTime.x > 0 ? (\n          <div\n            className=\"pointer-events-none absolute z-10 flex w-fit select-none gap-2 rounded-md bg-zinc-800 p-2\"\n            style={{\n              left: priceAtTime.x - 124 / 2,\n              top: 30\n            }}\n          >\n            <div className=\"text-xs tabular-nums\">${priceAtTime.value}</div>\n            <div className=\"text-xs tabular-nums text-zinc-400\">\n              {priceAtTime.time}\n            </div>\n          </div>\n        ) : null}\n\n        {startHighlight ? (\n          <div\n            className=\"pointer-events-none absolute h-32 w-5 select-none rounded-md border border-zinc-500 bg-zinc-500/20\"\n            style={{\n              left: startHighlight,\n              width: endHighlight\n                ? endHighlight - startHighlight\n                : priceAtTime.x - startHighlight,\n              bottom: 0\n            }}\n          ></div>\n        ) : null}\n\n        <svg\n          viewBox=\"0 0 250.0 168.0\"\n          height=\"150\"\n          width=\"100%\"\n          preserveAspectRatio=\"none\"\n        >\n          <defs>\n            <linearGradient\n              id=\"fill-id-tsuid_31\"\n              x1=\"0%\"\n              x2=\"0%\"\n              y1=\"0%\"\n              y2=\"100%\"\n            >\n              <stop offset=\"0%\" stopColor=\"#34a853\" stopOpacity=\"0.38\"></stop>\n              <stop offset=\"13%\" stopColor=\"#e6f4ea\" stopOpacity=\"0\"></stop>\n            </linearGradient>\n            <clipPath id=\"range-id-tsuid_31\">\n              <rect height=\"100%\" width=\"0\" x=\"0\" y=\"0\"></rect>\n            </clipPath>\n            <defs>\n              <linearGradient\n                id=\"chart-grad-_f1bJZYLUHqWpxc8Prs2meA_33\"\n                x1=\"0%\"\n                x2=\"0%\"\n                y1=\"0%\"\n                y2=\"100%\"\n              >\n                <stop offset=\"0%\" stopColor=\"#34a853\" stopOpacity=\"0.38\"></stop>\n                <stop offset=\"13%\" stopColor=\"#e6f4ea\" stopOpacity=\"0\"></stop>\n              </linearGradient>\n            </defs>\n            <clipPath id=\"mask-_f1bJZYLUHqWpxc8Prs2meA_32\">\n              <rect height=\"218\" width=\"250\" x=\"0\" y=\"-5\"></rect>\n            </clipPath>\n          </defs>\n          <path\n            d=\"M  0 42.86 L 0.89 46.26 L 1.78 44.3 L 2.68 44.24 L 3.57 42 L 4.46 43.42 L 5.35 43.62 L 6.25 47 L 7.14 47.65 L 8.03 47.69 L 8.92 45.55 L 9.82 43.19 L 10.71 43.9 L 11.6 42.83 L 12.49 42.81 L 13.39 46.75 L 14.28 43.06 L 15.17 40.8 L 16.06 39.72 L 16.96 39.77 L 17.85 45.77 L 18.74 44.93 L 19.63 44.35 L 20.53 40.29 L 21.42 42.77 L 22.31 42.12 L 23.2 43.4 L 24.1 47.95 L 24.99 50.15 L 25.88 48.59 L 26.77 42.18 L 27.67 44.1 L 28.56 39.91 L 29.45 44.92 L 30.34 47.62 L 31.24 48.06 L 32.13 47.67 L 33.02 56.47 L 33.91 57.74 L 34.8 65.48 L 35.7 64.47 L 36.59 47.25 L 37.48 58.26 L 38.37 52.04 L 39.27 55.8 L 40.16 92.92 L 41.05 105.2 L 41.94 102 L 42.84 106.14 L 43.73 78.71 L 44.62 104.6 L 45.51 96.58 L 46.41 67.56 L 47.3 69.53 L 48.19 69.99 L 49.08 66.75 L 49.98 69.72 L 50.87 70.13 L 51.76 71.3 L 52.65 70.03 L 53.55 67.92 L 54.44 66.41 L 55.33 97.12 L 56.22 95.93 L 57.12 95.03 L 58.01 95.09 L 58.9 65.56 L 59.79 65.12 L 60.69 82.42 L 61.58 74.7 L 62.47 71.13 L 63.36 82.43 L 64.26 96.02 L 65.15 100.36 L 66.04 98.6 L 66.93 103.37 L 67.82 102.12 L 68.72 97.08 L 69.61 89.74 L 70.5 90.7 L 71.39 93.46 L 72.29 94.24 L 73.18 97.8 L 74.07 97.88 L 74.96 96.63 L 75.86 96.27 L 76.75 97.15 L 77.64 100.12 L 78.53 100.51 L 79.43 106.59 L 80.32 104.54 L 81.21 100.31 L 82.1 118.76 L 83 106.24 L 83.89 114.8 L 84.78 174.89 L 85.67 122.28 L 86.57 149.25 L 87.46 151.47 L 88.35 153.38 L 89.24 153.5 L 90.14 149.24 L 91.03 122.44 L 91.92 122.08 L 92.81 147.16 L 93.71 147.46 L 94.6 119.13 L 95.49 117.97 L 96.38 122.22 L 97.28 116.38 L 98.17 119.53 L 99.06 119.65 L 99.95 120.15 L 100.84 120.22 L 101.74 121.28 L 102.63 121.4 L 103.52 122.97 L 104.41 122.15 L 105.31 120.6 L 106.2 116.55 L 107.09 122.23 L 107.98 120.96 L 108.88 119.54 L 109.77 120.19 L 110.66 120.99 L 111.55 119.92 L 112.45 115.69 L 113.34 116.33 L 114.23 116.07 L 115.12 115.34 L 116.02 111.34 L 116.91 107.23 L 117.8 113.21 L 118.69 98.77 L 119.59 97.04 L 120.48 96.56 L 121.37 96.36 L 122.26 99.7 L 123.16 103.33 L 124.05 100.38 L 124.94 99.68 L 125.83 99.02 L 126.73 102.56 L 127.62 103.25 L 128.51 103.38 L 129.4 104.89 L 130.3 118.07 L 131.19 100.82 L 132.08 103.06 L 132.97 103.47 L 133.86 99.8 L 134.76 111.28 L 135.65 107.73 L 136.54 107.46 L 137.43 108.08 L 138.33 109.82 L 139.22 110.94 L 140.11 111.3 L 141 108.14 L 141.9 109.35 L 142.79 108.38 L 143.68 99.08 L 144.57 99.02 L 145.47 98.61 L 146.36 99.07 L 147.25 99.26 L 148.14 95.1 L 149.04 92.08 L 149.93 92.76 L 150.82 92.87 L 151.71 83.31 L 152.61 82.93 L 153.5 84.86 L 154.39 84.12 L 155.28 94.08 L 156.18 93.31 L 157.07 94.23 L 157.96 94.58 L 158.85 99.33 L 159.75 80 L 160.64 90.28 L 161.53 84.07 L 162.42 68.37 L 163.32 76.88 L 164.21 81.78 L 165.1 80.72 L 165.99 73.89 L 166.88 77.14 L 167.78 67.58 L 168.67 59.82 L 169.56 61.91 L 170.45 61.07 L 171.35 73.74 L 172.24 77.02 L 173.13 78.61 L 174.02 71.59 L 174.92 68.24 L 175.81 72.14 L 176.7 65.37 L 177.59 76.73 L 178.49 88.02 L 179.38 88.01 L 180.27 88.27 L 181.16 86.23 L 182.06 86.14 L 182.95 89.54 L 183.84 94.16 L 184.73 97.72 L 185.63 81.52 L 186.52 92.85 L 187.41 94.14 L 188.3 93.06 L 189.2 92.64 L 190.09 92.44 L 190.98 91.75 L 191.87 90.53 L 192.77 88.27 L 193.66 85.44 L 194.55 82.26 L 195.44 85.08 L 196.34 85.65 L 197.23 53.43 L 198.12 72.01 L 199.01 38.37 L 199.9 69.43 L 200.8 74.46 L 201.69 74.22 L 202.58 82.46 L 203.47 77.01 L 204.37 87.8 L 205.26 91.56 L 206.15 76.69 L 207.04 76.46 L 207.94 78.13 L 208.83 80.06 L 209.72 92.79 L 210.61 87.74 L 211.51 88.21 L 212.4 88.47 L 213.29 87.35 L 214.18 89.69 L 215.08 77.37 L 215.97 87.95 L 216.86 75.16 L 217.75 70.47 L 218.65 85.11 L 219.54 88.1 L 220.43 88.06 L 221.32 86.34 L 222.22 76.91 L 223.11 75.33 L 224 73.6 L 224.89 25.31 L 225.79 44.14 L 226.68 43.93 L 227.57 45.13 L 228.46 44.03 L 229.36 35.73 L 230.25 33.65 L 231.14 34.81 L 232.03 17.64 L 232.92 21.13 L 233.82 19.37 L 234.71 24.66 L 235.6 23.87 L 236.49 22.56 L 237.39 28.48 L 238.28 25.33 L 239.17 28.51 L 240.06 30.83 L 240.96 35.79 L 241.85 34.6 L 242.74 31.2 L 243.63 32.97 L 244.53 33.01 L 245.42 31.38 L 246.31 30.21 L 247.2 27.75 L 248.1 25.27 L 248.99 23 L 249.88 23 L 250 23 L 2000 0 L 2000 1000 L -1000 1000\"\n            clipPath=\"url(#range-id-tsuid_31)\"\n            vectorEffect=\"non-scaling-stroke\"\n            stroke=\"none\"\n            strokeWidth={2}\n            fill='url(\"#fill-id-tsuid_31\")'\n          ></path>\n          <path\n            clipPath=\"url(#mask-_f1bJZYLUHqWpxc8Prs2meA_32)\"\n            d=\"M 0 42.86 L 0.89 46.26 L 1.78 44.3 L 2.68 44.24 L 3.57 42 L 4.46 43.42 L 5.35 43.62 L 6.25 47 L 7.14 47.65 L 8.03 47.69 L 8.92 45.55 L 9.82 43.19 L 10.71 43.9 L 11.6 42.83 L 12.49 42.81 L 13.39 46.75 L 14.28 43.06 L 15.17 40.8 L 16.06 39.72 L 16.96 39.77 L 17.85 45.77 L 18.74 44.93 L 19.63 44.35 L 20.53 40.29 L 21.42 42.77 L 22.31 42.12 L 23.2 43.4 L 24.1 47.95 L 24.99 50.15 L 25.88 48.59 L 26.77 42.18 L 27.67 44.1 L 28.56 39.91 L 29.45 44.92 L 30.34 47.62 L 31.24 48.06 L 32.13 47.67 L 33.02 56.47 L 33.91 57.74 L 34.8 65.48 L 35.7 64.47 L 36.59 47.25 L 37.48 58.26 L 38.37 52.04 L 39.27 55.8 L 40.16 92.92 L 41.05 105.2 L 41.94 102 L 42.84 106.14 L 43.73 78.71 L 44.62 104.6 L 45.51 96.58 L 46.41 67.56 L 47.3 69.53 L 48.19 69.99 L 49.08 66.75 L 49.98 69.72 L 50.87 70.13 L 51.76 71.3 L 52.65 70.03 L 53.55 67.92 L 54.44 66.41 L 55.33 97.12 L 56.22 95.93 L 57.12 95.03 L 58.01 95.09 L 58.9 65.56 L 59.79 65.12 L 60.69 82.42 L 61.58 74.7 L 62.47 71.13 L 63.36 82.43 L 64.26 96.02 L 65.15 100.36 L 66.04 98.6 L 66.93 103.37 L 67.82 102.12 L 68.72 97.08 L 69.61 89.74 L 70.5 90.7 L 71.39 93.46 L 72.29 94.24 L 73.18 97.8 L 74.07 97.88 L 74.96 96.63 L 75.86 96.27 L 76.75 97.15 L 77.64 100.12 L 78.53 100.51 L 79.43 106.59 L 80.32 104.54 L 81.21 100.31 L 82.1 118.76 L 83 106.24 L 83.89 114.8 L 84.78 174.89 L 85.67 122.28 L 86.57 149.25 L 87.46 151.47 L 88.35 153.38 L 89.24 153.5 L 90.14 149.24 L 91.03 122.44 L 91.92 122.08 L 92.81 147.16 L 93.71 147.46 L 94.6 119.13 L 95.49 117.97 L 96.38 122.22 L 97.28 116.38 L 98.17 119.53 L 99.06 119.65 L 99.95 120.15 L 100.84 120.22 L 101.74 121.28 L 102.63 121.4 L 103.52 122.97 L 104.41 122.15 L 105.31 120.6 L 106.2 116.55 L 107.09 122.23 L 107.98 120.96 L 108.88 119.54 L 109.77 120.19 L 110.66 120.99 L 111.55 119.92 L 112.45 115.69 L 113.34 116.33 L 114.23 116.07 L 115.12 115.34 L 116.02 111.34 L 116.91 107.23 L 117.8 113.21 L 118.69 98.77 L 119.59 97.04 L 120.48 96.56 L 121.37 96.36 L 122.26 99.7 L 123.16 103.33 L 124.05 100.38 L 124.94 99.68 L 125.83 99.02 L 126.73 102.56 L 127.62 103.25 L 128.51 103.38 L 129.4 104.89 L 130.3 118.07 L 131.19 100.82 L 132.08 103.06 L 132.97 103.47 L 133.86 99.8 L 134.76 111.28 L 135.65 107.73 L 136.54 107.46 L 137.43 108.08 L 138.33 109.82 L 139.22 110.94 L 140.11 111.3 L 141 108.14 L 141.9 109.35 L 142.79 108.38 L 143.68 99.08 L 144.57 99.02 L 145.47 98.61 L 146.36 99.07 L 147.25 99.26 L 148.14 95.1 L 149.04 92.08 L 149.93 92.76 L 150.82 92.87 L 151.71 83.31 L 152.61 82.93 L 153.5 84.86 L 154.39 84.12 L 155.28 94.08 L 156.18 93.31 L 157.07 94.23 L 157.96 94.58 L 158.85 99.33 L 159.75 80 L 160.64 90.28 L 161.53 84.07 L 162.42 68.37 L 163.32 76.88 L 164.21 81.78 L 165.1 80.72 L 165.99 73.89 L 166.88 77.14 L 167.78 67.58 L 168.67 59.82 L 169.56 61.91 L 170.45 61.07 L 171.35 73.74 L 172.24 77.02 L 173.13 78.61 L 174.02 71.59 L 174.92 68.24 L 175.81 72.14 L 176.7 65.37 L 177.59 76.73 L 178.49 88.02 L 179.38 88.01 L 180.27 88.27 L 181.16 86.23 L 182.06 86.14 L 182.95 89.54 L 183.84 94.16 L 184.73 97.72 L 185.63 81.52 L 186.52 92.85 L 187.41 94.14 L 188.3 93.06 L 189.2 92.64 L 190.09 92.44 L 190.98 91.75 L 191.87 90.53 L 192.77 88.27 L 193.66 85.44 L 194.55 82.26 L 195.44 85.08 L 196.34 85.65 L 197.23 53.43 L 198.12 72.01 L 199.01 38.37 L 199.9 69.43 L 200.8 74.46 L 201.69 74.22 L 202.58 82.46 L 203.47 77.01 L 204.37 87.8 L 205.26 91.56 L 206.15 76.69 L 207.04 76.46 L 207.94 78.13 L 208.83 80.06 L 209.72 92.79 L 210.61 87.74 L 211.51 88.21 L 212.4 88.47 L 213.29 87.35 L 214.18 89.69 L 215.08 77.37 L 215.97 87.95 L 216.86 75.16 L 217.75 70.47 L 218.65 85.11 L 219.54 88.1 L 220.43 88.06 L 221.32 86.34 L 222.22 76.91 L 223.11 75.33 L 224 73.6 L 224.89 25.31 L 225.79 44.14 L 226.68 43.93 L 227.57 45.13 L 228.46 44.03 L 229.36 35.73 L 230.25 33.65 L 231.14 34.81 L 232.03 17.64 L 232.92 21.13 L 233.82 19.37 L 234.71 24.66 L 235.6 23.87 L 236.49 22.56 L 237.39 28.48 L 238.28 25.33 L 239.17 28.51 L 240.06 30.83 L 240.96 35.79 L 241.85 34.6 L 242.74 31.2 L 243.63 32.97 L 244.53 33.01 L 245.42 31.38 L 246.31 30.21 L 247.2 27.75 L 248.1 25.27 L 248.99 23 L 249.88 23 L 250 23 L 2000 0 L 2000 1000 L -1000 1000\"\n            vectorEffect=\"non-scaling-stroke\"\n            stroke=\"#34a853\"\n            style={{ fill: 'url(#chart-grad-_f1bJZYLUHqWpxc8Prs2meA_33)' }}\n          ></path>\n        </svg>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 407, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}